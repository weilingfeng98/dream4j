<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

	<context:component-scan base-package="org.xxz.web" />
	<mvc:annotation-driven validator="validator" />

	<!-- 静态资源 -->
	<mvc:default-servlet-handler />
	<mvc:resources location="/resources/" mapping="/resources/**" />

	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<property name="mediaTypes">
			<value>
				html=text/html
				json=application/json
				json=text/html
				xml=application/xml
			</value>
		</property>
	</bean>

	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="contentNegotiationManager" ref="contentNegotiationManager" />
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="prefix" value="/WEB-INF/views/" />
					<property name="suffix" value=".jsp" />
				</bean>
			</list>
		</property>
		<property name="defaultViews">
			<list>
				<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
					<property name="extractValueFromSingleKeyModel" value="true" />
				</bean>
			</list>
		</property>
	</bean>

	<!-- 文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 10M -->
		<property name="maxUploadSize" value="83886080"></property>
	</bean>

	<!-- 数据校验 -->
	<!-- 以下 validator 在使用 mvc:annotation-driven 会 自动注册 -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
	    <property name="validationMessageSource" ref="messageSource" />
	</bean>

	<!-- bind your messages.properties -->
	<bean class="org.springframework.context.support.ResourceBundleMessageSource" id="messageSource">
		<property name="basenames">
		    <list>
		        <!-- 一定不要classpath:否则找不到messages.properties -->
		        <value>messages</value>
		    </list>
		</property>
		<!-- 不使用默认消息    但是使用默认写法，例子:类型.对象.字段 NotNull.user.id -->
		<property name="useCodeAsDefaultMessage" value="false"/>
		<property name="defaultEncoding" value="UTF-8" />
		<property name="cacheSeconds" value="60"/>
	</bean>

	<!-- 启动shiro注解 必须在spring mvc中 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	
	<!-- 配置异常 -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
	    <property name="exceptionMappings">
	       <props>
	           <prop key="org.apache.shiro.authz.UnauthorizedException">/unauthorized</prop>
	           <prop key="org.apache.shiro.authz.UnauthenticatedException">/unauthenticated</prop>
	       </props>
	    </property>
	</bean>
	
</beans>